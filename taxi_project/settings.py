"""
Django settings for taxi_project project.

Generated by 'django-admin startproject' using Django 4.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
from dotenv import load_dotenv
load_dotenv()

from pathlib import Path
import os
import dj_database_url


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&)1eh^(=g#60plv-&xu$@@ngqr9lm$qf62*_(niv+k@d2*aw!_'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'taxis-deaquipalla.up.railway.app',
    'localhost',
    '127.0.0.1',
]

# settings.py
CSRF_TRUSTED_ORIGINS = ['https://taxis-django-channels-production.up.railway.app']
CORS_ALLOWED_ORIGINS = ['https://taxis-django-channels-production.up.railway.app']
CORS_ALLOW_CREDENTIALS = True


# Application definition

INSTALLED_APPS = [
    'rest_framework',
    'rest_framework.authtoken',
    'daphne',
    'channels',
    'corsheaders',
    'taxis',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'taxi_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',  # No es necesario si solo usas plantillas dentro de las apps
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'taxi_project.context_processors.webpush_settings', # <-- Añadido
            ],
        },
    },
]


ASGI_APPLICATION = 'taxi_project.asgi.application'  # Configuración para WebSockets
WSGI_APPLICATION = 'taxi_project.wsgi.application'



# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        conn_max_age=600,
        conn_health_checks=True,
        default=f'sqlite:///{BASE_DIR / 'db.sqlite3'}'
    )
}

# Configuración específica para Railway
if os.environ.get('RAILWAY_ENVIRONMENT'):
    # Usar PostgreSQL en Railway
    DATABASES['default'] = dj_database_url.config(
        conn_max_age=600,
        conn_health_checks=True,
        default=os.environ.get('DATABASE_URL', f'sqlite:///{BASE_DIR / 'db.sqlite3'}')
    )
    
    # Configuración de seguridad para Railway
    DEBUG = False
    SECRET_KEY = os.environ.get('SECRET_KEY', SECRET_KEY)
    
    # Hosts permitidos para Railway
    ALLOWED_HOSTS = [
        'taxis-deaquipalla.up.railway.app',
        'taxis-django-channels-production.up.railway.app',
        '*.up.railway.app',
        'localhost',
        '127.0.0.1',
    ]
    
    # Configuración SSL para Railway
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    
    print("🚀 Configuración de Railway activada")
    print(f"📊 Base de datos: {DATABASES['default']['ENGINE']}")
    print(f"🔴 Redis URL: {os.environ.get('REDIS_URL', 'No configurado')}")
    print(f"🌐 Hosts permitidos: {ALLOWED_HOSTS}")


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


AUTH_USER_MODEL = 'taxis.AppUser'
LOGIN_URL = '/home/'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'




# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# default static files settings for PythonAnywhere.
# see https://help.pythonanywhere.com/pages/DjangoStaticFiles for more info

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # carpeta destino para producción
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'taxis', 'static'),  # Archivos estáticos de la app taxis
]

MEDIA_URL = '/media/'  # La URL para acceder a los archivos multimedia
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # El directorio donde se guardarán los archivos multimedia

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'



# Configuración de Redis
REDIS_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379')

# Configuración específica para Railway Redis
if os.environ.get('RAILWAY_ENVIRONMENT'):
    # Railway proporciona REDIS_URL automáticamente
    REDIS_URL = os.environ.get('REDIS_URL', 'redis://localhost:6379')

# Channels configuration
CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [REDIS_URL],
            "capacity": 1500,
            "expiry": 60,
        },
    },
}

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
SECURE_SSL_REDIRECT = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

GOOGLE_API_KEY = os.environ.get('GOOGLE_API_KEY', 'AIzaSyAtEPZgbPBwnJGrvIuwplRJDFbr0tmbnyQ')

# Google Maps - Usar la misma variable que ya está configurada en Railway
GOOGLE_MAPS_API_KEY = GOOGLE_API_KEY

TELEGRAM_BOT_TOKEN = '7754998885:AAGOEJhcCE8t3NMYS2mQ-v8xM56j6aFPRoY'
TELEGRAM_CHAT_ID_GRUPO_TAXISTAS = '-4767733103'

# --- Configuración de Web Push ---
WEBPUSH_SETTINGS = {
    "VAPID_PUBLIC_KEY": "REEMPLAZA_CON_TU_CLAVE_PUBLICA",
    "VAPID_PRIVATE_KEY": "REEMPLAZA_CON_TU_CLAVE_PRIVADA",
    "VAPID_ADMIN_EMAIL": "mailto:tu_email@ejemplo.com"
}